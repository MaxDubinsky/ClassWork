#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

class Time {
private:
	int days;
	int months;
	int year;
	string date;
public:
	Time() {
		this->date = this->days + '.' + this->months + '.' + this->year;
	}
	// GETTERS
	int getDays() { return this->days; }
	int getMonths() { return this->months; }
	int getYear() { return this->year; }
	string getDate() { return this->date; }
	
	// SETTERS
	int setDay(int days) { days = this->days; }
	int setMonths(int months) { months = this->months; }
	int setYear(int year) { year = this->year; }
};

class Expence {
private:
	int summa;
	string description;
	Time time;
public:
	// GETTERS
	int getSumma() { return this->summa; }
	string getDescription() { return this->description; }
	Time getDate() { return this->getDate(); }

	// SETTERS
	void setSumma(int summa) { summa = this->summa; }
	void setDescription(string description) { description = this->description; }

	void setDate(Time newtime) {
		this->time.setDay(newtime.getDays());
		this->time.setMonths(newtime.getMonths());
		this->time.setYear(newtime.getYear());
	}
};

class ExpenseTracker {
private:
	vector <Expence> expences;
public:
	// ADD NEW EXPENCE
	void addExpence() {
		Expence expence;
		int newSumma;
		string newDescription;
		Time newTime;

		int newDays;
		int newMonths;
		int newYear;

		cout << "ENTER NEW SUM: ";
		cin >> newSumma;
		cout << "ENTER NEW DESCRIPTION: ";
		cin >> newDescription;
		cout << "NOW, YOU NEED TO CHOOSE YOUR CURRENT DATE.";
		cout << "Please, enter your CURRENT days: ";
		cin >> newDays;
		cout << "Enter your CURRENT months: ";
		cin >> newMonths;
		cout << "Enter your CURRENT year: ";
		cin >> newYear;

		newTime.setDay(newDays);
		newTime.setMonths(newMonths);
		newTime.setYear(newYear);

		expence.setSumma(newSumma);
		expence.setDescription(newDescription);
		expence.setDate(newTime);
	}

	// DELETING THE LAST ELEMENT IN VECTOR 
	void deleteTheLastExpence() {
		this->expences.erase(expences.end());
	}

	// THE WHOLE SUMM
	void coutTheWholeSumma() {
		int summa;
		for (int i = 0; i < expences.size(); i++) {
			summa = expences[i].getSumma() + expences[i++].getSumma();
		}
		cout << summa;
	}
};

int main() {
	int choice;
	ExpenseTracker expence_tracker;

	cout << "1 - Add expence\n";
	cout << "2 - Delete last expence\n";
	cout << "3 - Add expence\n";
	
	do
	{
		cout << "Enter choice: ";
		cin >> choice;
		switch (choice)
		{
		case 1:
			expence_tracker.addExpence();
			continue;
		case 2:
			expence_tracker.deleteTheLastExpence();
			continue;
		case 3:
			expence_tracker.coutTheWholeSumma();
			continue;

		default:
			continue;
		}
	} while (true);
}
